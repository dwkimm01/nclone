TODO list

- MS Communicator
 . crashes, might be a library issue
 . incoming msgs are in HTML, need to parse it

- Google chat
 . HTML chars like ' and ... don't come through properly
 . <BR> show up and should be translated

- Text video mode (non graphics vga)
 . SHIFT-UP/DOWN does not work in full screen terminal mode on laptop
DONE i think, buddy list needs attention though . every keypress refreshes everything (prob. a problem all the time)

- Container plus Current Index abstraction
 . Could be helpful for Cmd History
 . Might be useful for NCWinScrollBack 

- Break Container out of NCWinscrollBack for a more MVC like arch
 . Might be a good time to start on this item which is listed out fuller below

- Highlight current chat window in different color in buddy list

- Show scrollback indicator
 . parhaps a n/max number on the "status bar"
 . in lieu of an actual status bar maybe throw it on top of the command window's upper right
 . or maybe an asterisk on the far right hand side of the window - top being 0% bottom being 100%

- Remove TODO items from README.md
 . Add build instructions to README.md

- Window background color
- Text attributes
 . A_BOLD, A_STANDOUT, A_BLINKING, etc
 . Create an enum in NCWin.h maybe to use as an additional CTOR param?
- Cleanup NCWin::NCWinData::printColor to use std::string::iterator

- Debug Window
 . for getting keystrokes initially
 . F6 or CTRL-F5 or something to toggle visibility (order in refresh list)

- Debug prpl-sipe bug
 . Build debug version of libpurple etc
 . Make sure it's not just a newer version of libpurple that's needed
 . Run gdb ./hw with that g_debug set to whatever (see README.md)

- Need a more MVC type architecture
 . Separate Window from data
 . Create data store to group Text Buffer, Connection, Buddy Name
 . Possibly use a BOOST::multi_map

- Fix page up/down scrolling
 . Cleanup NCTextWinFormatter
 . Improve functions in NCTextWinFormatter so they calculate line counts better
 . Page up goes up too far when there are wrapping lines

- Fix initial text windows when there isn't enough text to fill window
 . Right now we start from top but I want the text entered down near the cmd window
 . Might want to be able to make this configurable

- Buddy List
 . Needs window size (too small) protection
 . text wrapping should just cutoff instead (maybe add ...'s)
 . Add plus sign and color to buddy who has typed something
 . CTRL-n takes you to next buddy who has sent something
 . Animate hiding and showing of the window if config says to

- Console window
 . F1 type drop down kind of like quake had
 . Should show first "chat1" contents right now
 . Make sure general debug statements go to console
 . Try to get more debug info out of Chat client lib
 . Animate hiding and showing of the window if config says to 

- Configuration object
 . Use to help create windows by supplying config attributes
 . Use to persist data between sessions
 . Want to script things like connecting sessions
 . Want to keep text color settings: timestamp, buddy names, text, Status line

- Status line
 . One line window with updating and useful information
 .  TIME   INFO_COMMENT   CONNECTION STATUS

- House Keeping
 . Redraw (to softcopy) of architecture/code overview
 . Can use umbrello probally - put into notes section
 . Put screenshot link from README.md

- Command parsing improvements
 . Up/Down command line history
 . Left/Right move cursor
 . Text wrapping for commands/text that is too long for one window width
 . CTRL-r reverse search through command line history
 . Don't wait forever for a key to be entered (thread reuse)
 . Auto complete (suggestions) with dimmed text - and info/help about command

- Log chats
 . Write conversations (and commands) to (text) files
 . ~/.nclone/chats/<BUDDYNAME>-<TIME>.log
 . Use configuration for turning on/off and settings like maybe file type
 
- Command processing loop improvements
 . (std::map<std::string,std::function<>)

- NCMAin breakup
 . Getting too big
 . Command parsing and executing could go somewhere else
 . Window setup could probably happen in an NCApp child

- NCTextWinFormatter spaces aware
 . Want to be able to split the lines on spaces where possible
 . Turn NCTextWinFormatter into a class probably
 . Then maybe write a LengthSpaceFinder (LengthFinder brother) class
 . Make NCTextWinFormatter a templated class on FINDER (maybe?)

- NCWin refeshes too much
 . add lots of new windows: blinks too often
 . logon to chat service with buddies onlien: doesn't always redraw fully

- NCWin/NCObject refresh and draw cleanup
 . Currently there is refresh, rRefresh, clear, and updateSize
 . Seems like that should be cleaned up into refresh and draw methods

- General cleanup
 . Remove TODOs where possible
 . Make more meaningful comments/design note where not possible and delete TODO

- Better chat client integration
 . be able to log off (and delete connection)
 . buddy names should always be consistent (gchat adds things to the end)
 . buddy names should use a shorter version
 . accept new buddy or chat request
 . be able to log onto multiple services simultaneously
 . be able to see offline buddies
 . queue up messages to send to buddies when they are online
 . group chat
 . away message
 . auto away message (after timeout)
 . personalized away message (with buddy's name, etc)

- System/OS notification integration
 . be able to notify the system when events happen (messages come in)
 . would be annoying if it happens even when window is in focus

- Load chat clients through plugin libraries

- Be able to parse old ascii (ansi) color art 
 . Maybe be able to write it to logs too

- Build improvements 
 . Auto tool build environment
 . Use auto tools and cmake possibly
 . Still want to be able to use Eclipse, XCode, Linux, OSX, etc
 . Build in deps statically



----------------------------------------------------
-- Fixed


 error:
  /lorem
  type single line
  /d1
  /clear
  type single line enter ... nothing, page up crashes
 fix: didn't have p_offs reset in the NCWinScrollBack::clear method 

